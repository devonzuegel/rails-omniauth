diff --git i/app/controllers/application_controller.rb w/app/controllers/application_controller.rb
index 1f4a844..eb85c18 100644
--- i/app/controllers/application_controller.rb
+++ w/app/controllers/application_controller.rb
@@ -5,16 +5,10 @@ class ApplicationController < ActionController::Base
   protect_from_forgery with: :null_session
   before_action :controller_info
 
-  helper_method :current_user, :signed_in?, :correct_user!
+  helper_method :current_user, :current_visitor, :signed_in?, :correct_user!
 
   private # -----------------------------------------------------------
 
-  def current_user
-    @current_user ||= User.find(session[:user_id]) if session[:user_id]
-  rescue StandardError
-    nil
-  end
-
   def signed_in?
     current_user != nil
   end
diff --git i/db/schema.rb w/db/schema.rb
index 5a73675..26dc96f 100644
--- i/db/schema.rb
+++ w/db/schema.rb
@@ -11,40 +11,51 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20_150_701_185_347) do
-  create_table 'accounts', force: :cascade do |t|
-    t.string 'theme',        default: 'light'
-    t.boolean 'public_posts', default: false
-    t.integer 'user_id'
-    t.datetime 'created_at',                     null: false
-    t.datetime 'updated_at',                     null: false
-    t.integer 'timezone'
+ActiveRecord::Schema.define(version: 20150712213451) do
+
+  create_table "accounts", force: :cascade do |t|
+    t.string   "theme",        default: "light"
+    t.boolean  "public_posts", default: false
+    t.integer  "user_id"
+    t.datetime "created_at",                     null: false
+    t.datetime "updated_at",                     null: false
+    t.integer  "timezone"
+  end
+
+  add_index "accounts", ["user_id"], name: "index_accounts_on_user_id"
+
+  create_table "entries", force: :cascade do |t|
+    t.string   "title"
+    t.text     "body"
+    t.datetime "created_at",                 null: false
+    t.datetime "updated_at",                 null: false
+    t.integer  "user_id"
+    t.boolean  "public",     default: false
   end
 
-  add_index 'accounts', ['user_id'], name: 'index_accounts_on_user_id'
+  add_index "entries", ["user_id"], name: "index_entries_on_user_id"
 
-  create_table 'entries', force: :cascade do |t|
-    t.string 'title'
-    t.text 'body'
-    t.datetime 'created_at',                 null: false
-    t.datetime 'updated_at',                 null: false
-    t.integer 'user_id'
-    t.boolean 'public',     default: false
+  create_table "users", force: :cascade do |t|
+    t.string   "name"
+    t.string   "provider"
+    t.string   "uid"
+    t.datetime "created_at",  null: false
+    t.datetime "updated_at",  null: false
+    t.string   "email"
+    t.string   "first_name"
+    t.string   "middle_name"
+    t.string   "last_name"
+    t.string   "image"
+    t.string   "gender"
   end
 
-  add_index 'entries', ['user_id'], name: 'index_entries_on_user_id'
-
-  create_table 'users', force: :cascade do |t|
-    t.string 'name'
-    t.string 'provider'
-    t.string 'uid'
-    t.datetime 'created_at',  null: false
-    t.datetime 'updated_at',  null: false
-    t.string 'email'
-    t.string 'first_name'
-    t.string 'middle_name'
-    t.string 'last_name'
-    t.string 'image'
-    t.string 'gender'
+  create_table "visitors", force: :cascade do |t|
+    t.string   "ip_address"
+    t.integer  "user_id"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
   end
+
+  add_index "visitors", ["user_id"], name: "index_visitors_on_user_id"
+
 end
diff --git i/spec/controllers/application_controller_spec.rb w/spec/controllers/application_controller_spec.rb
index 8af5ecb..fa437b6 100644
--- i/spec/controllers/application_controller_spec.rb
+++ w/spec/controllers/application_controller_spec.rb
@@ -1,10 +1,28 @@
 # encoding: utf-8
 describe ApplicationController, :omniauth do
-  describe '#404' do
+  describe '#404:' do
     it 'trying to go to /entry/bad_id should raise an error' do
-      expect do
-        get entry_path('bad_id')
-      end.to raise_error ActionController::UrlGenerationError
+      expect { get entry_path('bad_id') }.to raise_error ActionController::UrlGenerationError
     end
   end
+
+  describe 'helper methods:' do
+    it 'current_user should return nil' do
+      expect(current_user).to be nil
+    end
+
+    it 'current_user should return current user when signed in' do
+      sign_in
+      expect(current_user).to eq @user
+    end
+
+    it 'current_visitor should create and return current visitor if a new, unique visitor' do
+      expect(session[:visitor_id]).to eq nil
+      current_visitor
+    end
+
+    it 'current_visitor shouldd find and return current visitor if old visitor who is a non-user'
+    it 'current_visitor shouldd find and return current visitor if old visitor who is a user'
+    it 'current_visitor shouldd return current visitor if signed in'
+  end
 end
diff --git i/spec/controllers/entries_controller_spec.rb w/spec/controllers/entries_controller_spec.rb
index 749008b..e382494 100644
--- i/spec/controllers/entries_controller_spec.rb
+++ w/spec/controllers/entries_controller_spec.rb
@@ -4,8 +4,6 @@ describe EntriesController, :omniauth do
       sign_in
       create_dummy_entries
 
-      ap session
-
       %w(just_mine default others foobar).each do |filter|
         get :index, 'filter' => filter
         expect(response).to render_template(:index)
diff --git i/spec/support/helpers/omniauth.rb w/spec/support/helpers/omniauth.rb
index 640338b..8495fba 100644
--- i/spec/support/helpers/omniauth.rb
+++ w/spec/support/helpers/omniauth.rb
@@ -47,16 +47,12 @@ module Omniauth
                                  uid:      auth_mock['uid'].to_s).first
     end
 
-    def current_user
-      User.find(@current_user.id) if @current_user
-    end
-
     def signed_in?
       !visitor?
     end
 
     def visitor?
-      current_user.nil?
+      @current_user.nil?
     end
   end
 end
diff --git i/spec/support/helpers/utils.rb w/spec/support/helpers/utils.rb
index 4f43d76..4aa94cb 100644
--- i/spec/support/helpers/utils.rb
+++ w/spec/support/helpers/utils.rb
@@ -29,7 +29,16 @@ def sign_in
 end
 
 def current_user
-  User.find(session[:user_id]) if session
+  @current_user ||= User.find(session[:user_id]) if session[:user_id]
+rescue StandardError
+  nil
+end
+
+def current_visitor
+  # ap request.remote_ip
+  @current_visitor ||= Visitor.find(session[:visitor_id]) if session[:session_id]
+rescue StandardError
+  nil
 end
 
 def signed_in?
